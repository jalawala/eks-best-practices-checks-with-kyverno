name,controlId,description,cloudProviders,policy,rule,id,isManual,subjectArea
IAM,1,"Certain system groups exist in Kubernetes which grant permissions that are used for certain system-level functions yet typically never appropriate for other users. This policy prevents creating bindings to some of these groups including system:anonymous, system:unauthenticated, and system:masters.",EKS,restrict-binding-system-groups,restrict-anonymous,,,Security
IAM,1,"Certain system groups exist in Kubernetes which grant permissions that are used for certain system-level functions yet typically never appropriate for other users. This policy prevents creating bindings to some of these groups including system:anonymous, system:unauthenticated, and system:masters.",EKS,restrict-binding-system-groups,restrict-unauthenticated,,,Security
IAM,1,"Certain system groups exist in Kubernetes which grant permissions that are used for certain system-level functions yet typically never appropriate for other users. This policy prevents creating bindings to some of these groups including system:anonymous, system:unauthenticated, and system:masters.",EKS,restrict-binding-system-groups,restrict-masters,,,Security
IAM,1,Cluster endpoint should not be public,EKS,check-cluster-endpoint,check-cluster-endpoint,,,Security
IAM,1,Restrict access to the instance profile assigned to nodes,EKS,check-instance-profile-access,check-instance-profile-access,,,Security
IAM,1,"This policy will check for all the service accounts which are mapped with the wildcard resource and apiGroup for given verb (delete, deletecollection, create, list, get, impersonate)",EKS,check-any-operations-role,check-wildcard-resources-apigroups-clusterrole,,,Security
IAM,1,"This policy will check for all the service accounts which are mapped with the wildcard resource and apiGroup for given verb (delete, deletecollection, create, list, get, impersonate)",EKS,check-any-operations-role,check-wildcard-resources-apigroups-role,,,Security
Multi-tenancy,2,"In cases such as multi-tenancy where new Namespaces must be fully provisioned before they can be used, it may not be easy to declare and understand if/when the Namespace is ready. Having a policy which defines all the resources which are required for each Namespace can assist in determining compliance. This policy, expected to be run in background mode only, performs a Namespace inventory check to ensure that all Namespaces have a ResourceQuota and NetworkPolicy. Additional rules may be written to extend the check for your needs. By default, background scans occur every one hour which may be changed with an additional container flag. Please see the installation documentation for details",EKS,namespace-inventory-check,resourcequotas,,,Security
Detective Controls,3,Cluster logging should be enabled,EKS,check-cluster-logging,check-cluster-audit-logging,,,Security
Network Security,4,VPC Flow logs are not enabled,EKS,check-vpc-flow-logs,check-vpc-flow-logs,,,Security
Infrastructure Security,5,Amazon Inspector is not enabled on both EC2 and ECR,EKS,check-amazon-inspector,check-amazon-inspector,,,Security
Image Security,6,Immutable tags are not enabled on all ECR repositories,EKS,check-immutable-tags-ecr,check-immutable-tag,,,Security